{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","currentButton","handleCurrentButton","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,cAAe,MAFnB,EAaEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEH,cAAeE,EAAME,OAdzC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,uBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,uBAV/C,oBAiBE,WACE,IAAQD,EAAkBO,KAAKR,MAAvBC,cAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIT,EAAD,mCAG6BA,EAH7B,KACC,kCAxBZ,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.ed5dc10f.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  currentButton: string | null;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    currentButton: null,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleCurrentButton);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleCurrentButton);\n  }\n\n  handleCurrentButton = (event: KeyboardEvent) => {\n    this.setState({ currentButton: event.key });\n  };\n\n  render() {\n    const { currentButton } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!currentButton ? (\n            'Nothing was pressed yet'\n          ) : (\n            `The last pressed key is [${currentButton}]`\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}